
# Overall workspace configuration.
[workspace]

members = ["omnibor", "omnibor-cli"]
resolver = "2"

# Shared settings across packages in the workspace.
[workspace.package]

edition = "2021"
license = "Apache-2.0"
license-file = "LICENSE"
homepage = "https://omnibor.io"

[profile.dev.package]
insta.opt-level = 3
similar.opt-level = 3

# The profile that 'cargo dist' will build with
[profile.dist]

inherits = "release"

lto = "thin"


#============================================================================
# Config for 'cargo release'
#----------------------------------------------------------------------------

[workspace.metadata.release]

# Commit message to use when doing a release.
pre-release-commit-message = "chore: Release {{crate_name}}-v{{version}}"

# Whether to use a single commit when releasing versions of multiple
# crates in a workspace.
consolidate-commits = false


#============================================================================
# Config for 'git cliff'
#----------------------------------------------------------------------------

[workspace.metadata.git-cliff.changelog]

trim = true

header = """
# Changelog\n
All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n
"""

body = """
{% if version -%}
    ## [{{ version | split(pat="-") | last | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else -%}
    ## [Unreleased]
{% endif -%}
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        - {{ commit.message | upper_first }}\
    {% endfor %}
{% endfor %}\n
"""

footer = """
{% for release in releases -%}
    {% if release.version -%}
        {% if release.previous.version -%}
            [{{ release.version | split(pat="-") | last | trim_start_matches(pat="v") }}]: \
                https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}\
                    /compare/{{ release.previous.version }}..{{ release.version }}
        {% endif -%}
    {% else -%}
        [unreleased]: https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}\
            /compare/{{ release.previous.version }}..HEAD
    {% endif -%}
{% endfor %}
<!-- generated by git-cliff -->
"""

[workspace.metadata.git-cliff.git]

# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true

# filter out the commits that are not conventional
filter_unconventional = true

# process each line of a commit as an individual commit
split_commits = false

# regex for parsing and grouping commits
commit_parsers = [
    { message = "^.*: add", group = "Added" },
    { message = "^.*: support", group = "Added" },
    { message = "^.*: remove", group = "Removed" },
    { message = "^.*: delete", group = "Removed" },
    { message = "^test", group = "Fixed" },
    { message = "^fix", group = "Fixed" },
    { message = "^.*: fix", group = "Fixed" },
    { message = "^.*", group = "Changed" },
]

# protect breaking changes from being skipped due to matching a skipping commit_parser
protect_breaking_commits = false

# filter out the commits that are not matched by commit parsers
filter_commits = true

# regex for matching git tags
tag_pattern = "v[0-9].*"

# regex for skipping tags
skip_tags = "v0.1.0-beta.1"

# regex for ignoring tags
ignore_tags = ""

# sort the tags topologically
topo_order = false

# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"
